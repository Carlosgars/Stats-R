setwd("~/Desktop/R Car Sales")
carsalesRAW=read.table("car_sales.txt",header=T,dec = ".")
carsales=na.omit(carsalesRAW)
carsales2=carsales[,-c(1,2,5)]
carsales2=na.omit(carsales2)
names(carsales2)
attach(carsales2)
c = cor(carsales2)
c
heatmap(c, scale="none")
# APARTADO C
carsales3 = carsales[,-c(1,2)]
attach(carsales3)
tipo
r1 = lm(reventa~tipo)
plot(r1)
plot(tipo, reventa)
heatmap(c, scale="none")
tipo
class(tipo)
levels(tipo)
contrasts(tipo)
r1 = lm(reventa~tipo)
plot(r1)
plot(r1)
summary(r1)
reventa.auto=coches2[tipo=="Automvil","reventa"]
reventa.auto=carsales[tipo=="Automvil","reventa"]
summary(reventa.auto)
reventa.auto=carsales[tipo=="Automovil","reventa"]
summary(reventa.auto)
reventa.auto=carsales[tipo=="Automóvil","reventa"]
summary(reventa.auto)
reventa.camion=coches2[tipo=="Camión","reventa"]
reventa.camion=carsales[tipo=="Camión","reventa"]
summary(reventa.camion)
boxplot(reventa.auto, reventa.camion, names=c("auto", "camion"), col = "lightblue")
plot(r1)
plot(r1)
c
det(c)
c
# Planteamos un modelo reventa = b0g + b1g * tipo
# donde tipo es un factor, toma los valores 0 y 1
# b0gorro = 0 (pvalor ~ 0)
# b1gorro = 0 (pvalor ~ 0.32)
# Observamos que el pvalor de b1gorro no es suficientemente pequeño, lo que nos dice que b1 es cero
# El contraste de hipótesis H0 : b1 = 0, H1 : b1 /= 0 , pvalor >, luego aceptamos hipótesis nula.
# Por tanto concluimos que es un pésimo modelo.
# En el gráfico de caja y bigotes vemos que autos y camiones comparten medias, aunque los autos tienen
# muchos valores muy por encima de la media, mientras que los camiones no.
plot(tipo, reventa)
# Planteamos un modelo reventa = b0g + b1g * tipo
# donde tipo es un factor, toma los valores 0 y 1
# b0gorro = 0 (pvalor ~ 0)
# b1gorro = 0 (pvalor ~ 0.32)
# Observamos que el pvalor de b1gorro no es suficientemente pequeño, lo que nos dice que b1 es cero
# El contraste de hipótesis H0 : b1 = 0, H1 : b1 /= 0 , pvalor >, luego aceptamos hipótesis nula.
# Por tanto concluimos que es un pésimo modelo.
# En el gráfico de caja y bigotes vemos que autos y camiones comparten medias, aunque los autos tienen
# muchos valores muy por encima de la media, mientras que los camiones no.
plot(tipo, reventa)
names(carsales)
r2 = lm(reventa~ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+klp)
r2 = lm(reventa~ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl)
r2
summary(r2)
r2.pvalor = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible)
summary(r2)
summary(r2.pvalor)
## Estrategia 1: Selección de variables por p-valor
summary(r2)
r2.pvalor = update(r2.pvalor,
lm(reventa ~ precio + longitud + peso_revestimiento + tapón_combustible))
summary(r2.pvalor)
r2.pvalor = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible, data = carsales)
summary(r2.pvalor)
r2.pvalor = update(r2.pvalor,
lm(reventa ~ precio + longitud + peso_revestimiento + tapón_combustible, data = carsales))
summary(r2.pvalor)
r3 = lm(reventa ~ .,data = carsales)
r3
r3 = lm(reventa ~ .,data = carsales2)
r3
r2
r1 = lm(reventa~tipo, data = carsales)
summary(r1)
r2 = lm(reventa ~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl, data = carsales)
r2
plot(r2)
residuals(r1)
shapiro.test(residuals(r1))
plot(residuals(r1))
hist(residuals(r1))
shapiro.test(residuals(car.lm))
car.lm = lm(reventa ~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl, data = carsales)
summary(car.lm)
plot(car.lm)
shapiro.test(residuals(car.lm))
pvalor.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible, data = carsales)
pvalor.lm = update(pvalor.lm,
lm(reventa ~ precio + longitud + peso_revestimiento + tapón_combustible, data = carsales))
summary(pvalor.lm)
shapiro.test(residuals(pvalor.lm))
shapiro.test(residuals(r1))
shapiro.test(residuals(car.lm))
shapiro.test(residuals(car.lm))
shapiro.test(residuals(pvalor.lm))
## Estrategia 2: Regresión paso a paso
step(car.lm)
summary(pvalor.lm)
# Toma como variables explicativas precio, motor_s, longitud, peso_revestimiento, tapón_combustible, klp
pvalor.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible+ klp, data = carsales)
# Toma como variables explicativas precio, motor_s, longitud, peso_revestimiento, tapón_combustible, kpl
pvalor.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl, data = carsales)
summary(pvalor.lm)
# Toma como variables explicativas precio, motor_s, longitud, peso_revestimiento, tapón_combustible, kpl
step.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl, data = carsales)
summary(step.lm)
plot(step.lm)
shapiro.test(residuals(step.lm))
## Estrategia 3: Mejor selección de subconjuntos
library(leaps)
install.packages("leaps")
## Estrategia 3: Mejor selección de subconjuntos
library(leaps)
car.subsets=regsubsets(reventa~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl ,data=carsales)
summary(car.subsets)
summary(car.subsets)$bic
summary(car.subsets)
##
summary(car.lm)
## Comparamos brevemente los modelos
summary(car.lm)
summary(car.pvalor.lm)
car.pvalor.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible, data = carsales)
car.pvalor.lm = update(car.pvalor.lm,
lm(reventa ~ precio + longitud + peso_revestimiento + tapón_combustible, data = carsales))
summary(car.pvalor.lm) #
summary(car.step.lm)   #
# Toma como variables explicativas precio, motor_s, longitud, peso_revestimiento, tapón_combustible, kpl
car.step.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl, data = carsales)
## Estrategia 2: Regresión paso a paso
step(car.lm)
# Toma como variables explicativas precio, motor_s, longitud, peso_revestimiento, tapón_combustible, kpl
car.step.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl, data = carsales)
summary(car.step.lm)   #
summary(car.subsets)$rsq
summary(car.subsets)
summary(car.subset.rsq)
car.subset.rsq = lm(reventa ~ precio+motor_s+caballos+batalla+longitud+peso_revestimiento+tapón_combustible+kpl, data = carsales)
summary(car.subset.rsq)
summary(car.subsets)$bic
summary(car.subsets)
summary(car.subsets)$bic
# bic = -310.0438 {precio,longitud,peso_revestimiento,tapón_combustible}
car.subset.bic = lm(reventa ~ precio+longitud+peso_revestimiento,tapón_combustible)
# bic = -310.0438 {precio,longitud,peso_revestimiento,tapón_combustible}
car.subset.bic = lm(reventa ~ precio+longitud+peso_revestimiento+tapón_combustible,data=carsales)
# Hacia atrás
step(car.lm,direction = "backward")
## Estrategia 2: Regresión paso a paso
# Hacia atrás y hacia delante
step(car.lm)
# Hacia delante
step(car.lm,direction = "forward")
# Hacia delante
nulo=lm(reventa~1)
step(nulo,direction = "forward",
scope=list(lower=nulo, upper=car.lm))
## Estrategia 2: Regresión paso a paso
# Hacia atrás y hacia delante
step(car.lm,direction = "both")
# precio + longitud + peso_revestimiento + tapón_combustible
car.stepforward.lm = lm(reventa ~ precio + longitud + peso_revestimiento + tapón_combustible, data = carsales)
summary(car.stepforward.lm)
# Por BIC
summary(car.lm)$bic             # Multiple R-squared:  0.9472,	Adjusted R-squared:  0.9417
summary(car.pvalor.lm)$bic      # Multiple R-squared:  0.9441,	Adjusted R-squared:  0.9421
summary(car.subset.rsq)$bic     # Multiple R-squared:  0.9468,	Adjusted R-squared:  0.9429
# Por BIC
bic(car.lm)             # Multiple R-squared:  0.9472,	Adjusted R-squared:  0.9417
# Por BIC
bic(car.lm)             # Multiple R-squared:  0.9472,	Adjusted R-squared:  0.9417
# Por BIC
BIC(car.lm)             # Multiple R-squared:  0.9472,	Adjusted R-squared:  0.9417
# Por BIC
BIC(car.lm)             # Multiple R-squared:  0.9472,	Adjusted R-squared:  0.9417
BIC(car.pvalor.lm)          #
BIC(car.pvalor.lm)          # 595.8155
BIC(car.stepbnf.lm)         #
#reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl
# Toma como variables explicativas precio, motor_s, longitud, peso_revestimiento, tapón_combustible, kpl
car.stepbnf.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl, data = carsales)
BIC(car.stepbnf.lm)         #
BIC(car.stepforward.lm)     #
BIC(car.subset.rsq)    #
summary(car.subsets)
summary(car.subsets)$bic
car.subset.bic2 = lm(reventa ~ precio)
BIC(car.stepforward.lm)     #
BIC(car.subset.bic)         #
r1 = lm(reventa~tipo, data = carsales)
summary(r1)
shapiro.test(residuals(car.lm))
car.pvalor.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible, data = carsales)
car.pvalor.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible, data = carsales)
summary(car.pvalor.lm)
summary(todas.car.lm)
todas.car.lm = lm(reventa ~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl, data = carsales)
todas.car.lm
summary(todas.car.lm)
summary(car.pvalor.lm)
summary(car.subsets)$BIC
summary(car.subsets)$bic
BIC(car.subset.bic)         #
summary(car.subsets)$arsq
summary(car.subsets)$adj
BIC(car.pvalor.lm)          # 595.8155
BIC(car.stepbnf.lm)         # 601.2307
BIC(car.stepforward.lm)     # 595.8155
BIC(car.subset.bic)         #
BIC(car.subset.rsq)         #
summary(car.stepforward.lm)
summary(car.stepbnf.lm)
summary(car.stepforward.lm)
summary(car.stepbnf.lm)
carsalesRAW=read.table("car_sales.txt",header=T,dec = ".")
carsales=na.omit(carsalesRAW)
carsales2=carsales[,-c(1,2,5)]
carsales2=na.omit(carsales2)
names(carsales2)
attach(carsales2)
c = cor(carsales2)
c
det(c)
# Determinante muy pequeño
heatmap(c, scale="none")
# APARTADO C
carsales3 = carsales[,-c(1,2)]
attach(carsales3)
tipo
class(tipo)
levels(tipo)
contrasts(tipo)
r1 = lm(reventa~tipo, data = carsales)
plot(r1)
reventa.camion=carsales[tipo=="Camión","reventa"]
summary(reventa.camion)
boxplot(reventa.auto, reventa.camion, names=c("auto", "camion"), col = "lightblue")
todas.car.lm = lm(reventa ~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl, data = carsales)
todas.car.lm
summary(todas.car.lm)
plot(todas.car.lm)
lm(reventa ~ precio + longitud + peso_revestimiento + tapón_combustible, data = carsales))
summary(car.pvalor.lm)
plot(car.pvalor.lm)
#reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl
# Toma como variables explicativas precio, motor_s, longitud, peso_revestimiento, tapón_combustible, kpl
car.stepbnf.lm = lm(reventa ~ precio + motor_s + longitud + peso_revestimiento + tapón_combustible + kpl, data = carsales)
summary(car.stepbnf.lm)
plot(car.stepbnf.lm)
nulo=lm(reventa~1)
step(nulo,direction = "forward",
scope=list(lower=nulo, upper=car.lm))
# precio + longitud + peso_revestimiento + tapón_combustible
car.stepforward.lm = lm(reventa ~ precio + longitud + peso_revestimiento + tapón_combustible, data = carsales)
summary(car.stepforward.lm)
## Estrategia 3: Mejor selección de subconjuntos
library(leaps)
car.subsets=regsubsets(reventa~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl ,data=carsales)
summary(car.subsets)
summary(car.subsets)$rsq
summary(car.subsets)$adj
# precio,motor_s,caballos,batalla,longitud,peso_revestimiento,tapón_combustible,kpl
car.subset.rsq = lm(reventa ~ precio+motor_s+caballos+batalla+longitud+peso_revestimiento+tapón_combustible+kpl, data = carsales)
summary(car.subsets)
summary(car.subsets)$bic
# bic = -310.0438 {precio,longitud,peso_revestimiento,tapón_combustible}
car.subset.bic = lm(reventa ~ precio+longitud+peso_revestimiento+tapón_combustible,data=carsales)
## Comparamos brevemente los modelos
# Por Bondad de ajuste
summary(car.lm)             # Multiple R-squared:  0.9472,	Adjusted R-squared:  0.9417
summary(car.pvalor.lm)      # Multiple R-squared:  0.9441,	Adjusted R-squared:  0.9421
summary(car.stepbnf.lm)     # Multiple R-squared:  0.946,	  Adjusted R-squared:  0.9431
summary(car.stepforward.lm) # Multiple R-squared:  0.9441,	Adjusted R-squared:  0.9421
summary(car.subset.rsq)     # Multiple R-squared:  0.9468,	Adjusted R-squared:  0.9429
# Por BIC
BIC(car.lm)                 # 622.3848
BIC(car.pvalor.lm)          # 599.2804
BIC(car.stepbnf.lm)         # 601.2307
BIC(car.stepforward.lm)     # 595.8155
BIC(car.subset.rsq)         # 608.8155
summary(car.stepforward.lm)
summary(car.stepbnf.lm)
## Estrategia 2: Regresión paso a paso
# Hacia atrás y hacia delante
step(car.lm,direction = "both")
## Estrategia 2: Regresión paso a paso
# Hacia atrás y hacia delante
step(car.lm,direction = "both")
# Hacia atrás
step(car.lm,direction = "backward")
# Hacia delante
nulo=lm(reventa~1)
step(nulo,direction = "forward",
scope=list(lower=nulo, upper=car.lm))
car.subsets=regsubsets(reventa~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl ,data=carsales)
summary(car.subsets)
summary(car.subsets)$rsq
summary(car.subsets)$aic
summary(car.subsets)$AIC
summary(car.stepforward.lm)
mean(precio)
predict(car.stepforward.lm,newdata=data.frame(precio=(mean(precio)),longitud=mean(longitud),
peso_revestimiento=mean(peso_revestimiento),
tapón_combustible=mean(tapón_combustible)))
mean(reventa)
predict(car.stepforward.lm,newdata=data.frame(precio=(mean(precio)),longitud=mean(longitud),
peso_revestimiento=mean(peso_revestimiento),
tapón_combustible=mean(tapón_combustible)), confint.default())
predict(car.stepforward.lm,newdata=data.frame(precio=(mean(precio)),longitud=mean(longitud),
peso_revestimiento=mean(peso_revestimiento),
tapón_combustible=mean(tapón_combustible)), confint(reventa))
predict(car.stepforward.lm,newdata=data.frame(precio=(mean(precio)),longitud=mean(longitud),
peso_revestimiento=mean(peso_revestimiento),
tapón_combustible=mean(tapón_combustible)), confint(reventa))
predict(car.stepforward.lm,newdata=data.frame(precio=(mean(precio)),longitud=mean(longitud),
peso_revestimiento=mean(peso_revestimiento),
tapón_combustible=mean(tapón_combustible)),interval="confidence")
leaps([precio, longitud, peso_revestimiento, tapón_combustible],reventa)
leaps(precio, longitud, peso_revestimiento, tapón_combustible,reventa)
car.subsets=regsubsets(reventa~ ventas+tipo+precio+motor_s+caballos+batalla+anchura+longitud+peso_revestimiento
+tapón_combustible+kpl ,data=carsales)
summary(car.subsets)
tres.subset.lm = lm(reventa~precio,peso_revestimiento,tapón_combustible,data=carsales)
summary(tres.subset.lm)
tres.subset.lm = lm(reventa~precio,peso_revestimiento,tapón_combustible,data=carsales)
summary(tres.subset.lm)
tres.subset.lm
summary(car.subsets)
# precio, peso_revestimiento, tapón_combustible
dos.subset.lm = lm(reventa~precio,longitud,data=carsales)
# precio, peso_revestimiento, tapón_combustible
dos.subset.lm = lm(reventa~precio+longitud,data=carsales)
dos.subset.lm
plot(tres.subset.lm)
tres.subset.lm = lm(reventa~precio,peso_revestimiento,tapón_combustible,data=carsales)
tres.subset.lm
summary(tres.subset.lm)
summary(carsales2)
summary(car.lm)
summary(car.stepforward.lm)
shapiro.test(residuals(car.stepforward.lm
))
